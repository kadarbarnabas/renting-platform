@page "/cars/create"
@using System.IO
@using RentingPlatform.Shared
@inject NavigationManager NavigationManager
@inject HttpClient Http

<h2>Autó felvétele</h2>
<hr/>
<div>
    <EditForm Model="@car" OnValidSubmit="@HandleSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        
        <div class="form-group">
            <label>Márka</label>
            <InputText class="form-control" @bind-Value="car.Brand"></InputText>

            <label>Model</label>
            <InputText class="form-control" @bind-Value="car.Model"></InputText>

            <label>Rendszám</label>
            <InputText class="form-control" @bind-Value="car.PlateNumber"></InputText>

            <label>Leírás</label>
            <InputText class="form-control" @bind-Value="car.Description"></InputText>

            <!-- Image Upload Button -->
            <label>Autó képe</label>
            <InputFile class="form-control" OnChange="HandleFileSelected"></InputFile>
            @if (imagePreviewUrl != null)
            {
                <div class="mt-3">
                    <strong>Előnézet:</strong>
                    <img src="@imagePreviewUrl" alt="Image Preview" style="max-width: 200px; max-height: 200px;"/>
                </div>
            }

            <button type="submit" class="btn btn-primary">Létrehozás</button>
        </div>
    </EditForm>

    <!-- Error message display -->
    @if (errorMessage != null)
    {
        <div class="alert alert-danger mt-3">
            @errorMessage
        </div>
    }
</div>

@code{
    private Car car = new();
    private string? errorMessage;
    private string? imagePreviewUrl; // This will hold the URL for the image preview.

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;

        if (file != null && file.ContentType.StartsWith("image/"))
        {
            var buffer = new byte[file.Size];
            await file.OpenReadStream().ReadAsync(buffer);

            // Create a preview URL for the selected image
            imagePreviewUrl = $"data:image/{file.ContentType.Split('/')[1]};base64,{Convert.ToBase64String(buffer)}";

            // Optionally, you could store the image in the car object if you're uploading the image
            car.Image = buffer; // Assuming you have an ImageData property to store the file data
        }
        else
        {
            errorMessage = "Kérem válasszon egy érvényes képfájlt!";
        }
    }

    private async Task HandleSubmit()
    {
        try
        {
            var res = await Http.PostAsJsonAsync("/Car", car);

            if (res.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo("/cars");
            }
            else
            {
                errorMessage = "Hiba történt az autó felvétele során. Kérem próbálja újra!";
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
            errorMessage = "Hiba történt a kapcsolat során. Kérem próbálja újra!";
        }
    }
}
