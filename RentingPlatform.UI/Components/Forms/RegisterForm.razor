@using RentingPlatform.Shared
<EditForm Model="User" OnValidSubmit="() => OnValidSubmit()" Validate="ValidatePasswords">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Name</label>
        <InputText @bind-Value="User.Name" class="form-control" />
        <ValidationMessage For="() => User.Name" />
    </div>

    <div class="mb-3">
        <label class="form-label">Email</label>
        <InputText @bind-Value="User.Email" class="form-control" />
        <ValidationMessage For="() => User.Email" />
    </div>

    <div class="mb-3">
        <label class="form-label">Password</label>
        <InputText @bind-Value="User.Password" type="password" class="form-control" />
        <ValidationMessage For="() => User.Password" />
    </div>

    <div class="mb-3">
        <label class="form-label">Confirm Password</label>
        <InputText @bind-Value="ConfirmPassword" type="password" class="form-control" />
        <ValidationMessage For="() => ConfirmPassword" />
    </div>

    <button class="btn btn-primary" type="submit">@ButtonText</button>
    <p class="text-danger">@ErrorMessage</p>
</EditForm>

@code {
    [Parameter]
    public Users User { get; set; } = new();

    [Parameter]
    public Func<Task> OnValidSubmit { get; set; }

    [Parameter]
    public string ButtonText { get; set; } = "Register";

    [Parameter]
    public string ErrorMessage { get; set; }

    private string ConfirmPassword { get; set; } = string.Empty;

    private IEnumerable<string> ValidatePasswords()
    {
        if (User.Password != ConfirmPassword)
        {
            yield return "Passwords do not match.";
        }
    }
}
